/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.Pulsar_test.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class KeyValueRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -958408640389177251L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"KeyValueRecord\",\"fields\":[{\"name\":\"key\",\"type\":{\"type\":\"record\",\"name\":\"ContainerPlanKey\",\"namespace\":\"com.example.Pulsar_test.model\",\"doc\":\"Table 63353437396533612d396630362d346635352d626235312d303766386633616630633037_sortation.container_plan\",\"fields\":[{\"name\":\"container_id\",\"type\":\"string\"},{\"name\":\"node_id\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"value\",\"type\":{\"type\":\"record\",\"name\":\"ContainerPlanValue\",\"namespace\":\"com.example.Pulsar_test.model\",\"doc\":\"Table 63353437396533612d396630362d346635352d626235312d303766386633616630633037_sortation.container_plan\",\"fields\":[{\"name\":\"planned_stage_area_ids\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"string\"]}],\"default\":null},{\"name\":\"sort_group_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"processing_date\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"physical_status\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"last_scanned_stage_area_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"planned_stage_areas\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",{\"type\":\"record\",\"name\":\"Area\",\"doc\":\"CQL type 38393236353635392d373833652d346333392d626338382d316162383932613364353731_sortation.area\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"barcode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null}]}]}],\"default\":null},{\"name\":\"planned_sort_area_ids\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"string\"]}],\"default\":null},{\"name\":\"last_scanned_receive_area_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"airterra_tracking_number\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"execution_status\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"planned_receive_area_ids\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"string\"]}],\"default\":null},{\"name\":\"container_barcode\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"last_updated_at\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"auxiliary_data\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdcAuxiliaryData\",\"doc\":\"CQL UDT type\",\"fields\":[{\"name\":\"account_number\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"origin_facility_code\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"destination_facility_code\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"created_at\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"planned_receive_areas\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"Area\"]}],\"default\":null},{\"name\":\"container_type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"parent_container_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"last_scanned_sort_area_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"planned_sort_areas\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"Area\"]}],\"default\":null},{\"name\":\"is_container_empty\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"container_closed_timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"container_loaded_timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"container_staged_timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"container_departed_timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"container_destroyed_timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"parcel_received_timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"children_metadata\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"CdcChildrenMetadata\",\"doc\":\"CQL UDT type\",\"fields\":[{\"name\":\"service_information\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",{\"type\":\"record\",\"name\":\"CdcServiceInformation\",\"doc\":\"CQL UDT type\",\"fields\":[{\"name\":\"service_level\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"parcel_count\",\"type\":[\"null\",\"int\"],\"default\":null}]}]}],\"default\":null}]}],\"default\":null},{\"name\":\"container_cpt\",\"type\":[\"null\",\"long\"],\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<KeyValueRecord> ENCODER =
      new BinaryMessageEncoder<KeyValueRecord>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<KeyValueRecord> DECODER =
      new BinaryMessageDecoder<KeyValueRecord>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<KeyValueRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<KeyValueRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<KeyValueRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<KeyValueRecord>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this KeyValueRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a KeyValueRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a KeyValueRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static KeyValueRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public com.example.Pulsar_test.model.ContainerPlanKey key;
  @Deprecated public com.example.Pulsar_test.model.ContainerPlanValue value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public KeyValueRecord() {}

  /**
   * All-args constructor.
   * @param key The new value for key
   * @param value The new value for value
   */
  public KeyValueRecord(com.example.Pulsar_test.model.ContainerPlanKey key, com.example.Pulsar_test.model.ContainerPlanValue value) {
    this.key = key;
    this.value = value;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return key;
    case 1: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: key = (com.example.Pulsar_test.model.ContainerPlanKey)value$; break;
    case 1: value = (com.example.Pulsar_test.model.ContainerPlanValue)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'key' field.
   * @return The value of the 'key' field.
   */
  public com.example.Pulsar_test.model.ContainerPlanKey getKey() {
    return key;
  }


  /**
   * Sets the value of the 'key' field.
   * @param value the value to set.
   */
  public void setKey(com.example.Pulsar_test.model.ContainerPlanKey value) {
    this.key = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public com.example.Pulsar_test.model.ContainerPlanValue getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(com.example.Pulsar_test.model.ContainerPlanValue value) {
    this.value = value;
  }

  /**
   * Creates a new KeyValueRecord RecordBuilder.
   * @return A new KeyValueRecord RecordBuilder
   */
  public static KeyValueRecord.Builder newBuilder() {
    return new KeyValueRecord.Builder();
  }

  /**
   * Creates a new KeyValueRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new KeyValueRecord RecordBuilder
   */
  public static KeyValueRecord.Builder newBuilder(KeyValueRecord.Builder other) {
    if (other == null) {
      return new KeyValueRecord.Builder();
    } else {
      return new KeyValueRecord.Builder(other);
    }
  }

  /**
   * Creates a new KeyValueRecord RecordBuilder by copying an existing KeyValueRecord instance.
   * @param other The existing instance to copy.
   * @return A new KeyValueRecord RecordBuilder
   */
  public static KeyValueRecord.Builder newBuilder(KeyValueRecord other) {
    if (other == null) {
      return new KeyValueRecord.Builder();
    } else {
      return new KeyValueRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for KeyValueRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<KeyValueRecord>
    implements org.apache.avro.data.RecordBuilder<KeyValueRecord> {

    private com.example.Pulsar_test.model.ContainerPlanKey key;
    private com.example.Pulsar_test.model.ContainerPlanKey.Builder keyBuilder;
    private com.example.Pulsar_test.model.ContainerPlanValue value;
    private com.example.Pulsar_test.model.ContainerPlanValue.Builder valueBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(KeyValueRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.key)) {
        this.key = data().deepCopy(fields()[0].schema(), other.key);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasKeyBuilder()) {
        this.keyBuilder = com.example.Pulsar_test.model.ContainerPlanKey.newBuilder(other.getKeyBuilder());
      }
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasValueBuilder()) {
        this.valueBuilder = com.example.Pulsar_test.model.ContainerPlanValue.newBuilder(other.getValueBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing KeyValueRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(KeyValueRecord other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.key)) {
        this.key = data().deepCopy(fields()[0].schema(), other.key);
        fieldSetFlags()[0] = true;
      }
      this.keyBuilder = null;
      if (isValidValue(fields()[1], other.value)) {
        this.value = data().deepCopy(fields()[1].schema(), other.value);
        fieldSetFlags()[1] = true;
      }
      this.valueBuilder = null;
    }

    /**
      * Gets the value of the 'key' field.
      * @return The value.
      */
    public com.example.Pulsar_test.model.ContainerPlanKey getKey() {
      return key;
    }


    /**
      * Sets the value of the 'key' field.
      * @param value The value of 'key'.
      * @return This builder.
      */
    public KeyValueRecord.Builder setKey(com.example.Pulsar_test.model.ContainerPlanKey value) {
      validate(fields()[0], value);
      this.keyBuilder = null;
      this.key = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'key' field has been set.
      * @return True if the 'key' field has been set, false otherwise.
      */
    public boolean hasKey() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'key' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.example.Pulsar_test.model.ContainerPlanKey.Builder getKeyBuilder() {
      if (keyBuilder == null) {
        if (hasKey()) {
          setKeyBuilder(com.example.Pulsar_test.model.ContainerPlanKey.newBuilder(key));
        } else {
          setKeyBuilder(com.example.Pulsar_test.model.ContainerPlanKey.newBuilder());
        }
      }
      return keyBuilder;
    }

    /**
     * Sets the Builder instance for the 'key' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public KeyValueRecord.Builder setKeyBuilder(com.example.Pulsar_test.model.ContainerPlanKey.Builder value) {
      clearKey();
      keyBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'key' field has an active Builder instance
     * @return True if the 'key' field has an active Builder instance
     */
    public boolean hasKeyBuilder() {
      return keyBuilder != null;
    }

    /**
      * Clears the value of the 'key' field.
      * @return This builder.
      */
    public KeyValueRecord.Builder clearKey() {
      key = null;
      keyBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public com.example.Pulsar_test.model.ContainerPlanValue getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public KeyValueRecord.Builder setValue(com.example.Pulsar_test.model.ContainerPlanValue value) {
      validate(fields()[1], value);
      this.valueBuilder = null;
      this.value = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'value' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.example.Pulsar_test.model.ContainerPlanValue.Builder getValueBuilder() {
      if (valueBuilder == null) {
        if (hasValue()) {
          setValueBuilder(com.example.Pulsar_test.model.ContainerPlanValue.newBuilder(value));
        } else {
          setValueBuilder(com.example.Pulsar_test.model.ContainerPlanValue.newBuilder());
        }
      }
      return valueBuilder;
    }

    /**
     * Sets the Builder instance for the 'value' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public KeyValueRecord.Builder setValueBuilder(com.example.Pulsar_test.model.ContainerPlanValue.Builder value) {
      clearValue();
      valueBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'value' field has an active Builder instance
     * @return True if the 'value' field has an active Builder instance
     */
    public boolean hasValueBuilder() {
      return valueBuilder != null;
    }

    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public KeyValueRecord.Builder clearValue() {
      value = null;
      valueBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public KeyValueRecord build() {
      try {
        KeyValueRecord record = new KeyValueRecord();
        if (keyBuilder != null) {
          try {
            record.key = this.keyBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("key"));
            throw e;
          }
        } else {
          record.key = fieldSetFlags()[0] ? this.key : (com.example.Pulsar_test.model.ContainerPlanKey) defaultValue(fields()[0]);
        }
        if (valueBuilder != null) {
          try {
            record.value = this.valueBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("value"));
            throw e;
          }
        } else {
          record.value = fieldSetFlags()[1] ? this.value : (com.example.Pulsar_test.model.ContainerPlanValue) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<KeyValueRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<KeyValueRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<KeyValueRecord>
    READER$ = (org.apache.avro.io.DatumReader<KeyValueRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.key.customEncode(out);

    this.value.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.key == null) {
        this.key = new com.example.Pulsar_test.model.ContainerPlanKey();
      }
      this.key.customDecode(in);

      if (this.value == null) {
        this.value = new com.example.Pulsar_test.model.ContainerPlanValue();
      }
      this.value.customDecode(in);

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.key == null) {
            this.key = new com.example.Pulsar_test.model.ContainerPlanKey();
          }
          this.key.customDecode(in);
          break;

        case 1:
          if (this.value == null) {
            this.value = new com.example.Pulsar_test.model.ContainerPlanValue();
          }
          this.value.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










